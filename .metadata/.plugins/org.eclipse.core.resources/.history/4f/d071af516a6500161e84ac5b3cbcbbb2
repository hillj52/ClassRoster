package ssa;

import java.util.Stack;

public class RPNStack {

	private Stack<String> s;
	private int size;
	
	public RPNStack(String inp) {
		s = new Stack<String>();
		size = inp.length();
		
		for (int i=inp.length();i>0;i--) {
			s.push(inp.substring(i-1, i));
		}
	}
	
	public String solve() {
		while (size > 1) {
			push(evaluate());
		}
		return pop();
	}
	
	private String pop() {
		size--;
		return s.pop();
	}
	
	private void push(String str) {
		size++;
		s.push(str);
	}
	
	private String evaluate() {

		int op1 = Integer.parseInt(pop());
		int op2 = Integer.parseInt(pop());
		String operator = pop();
		int answer = 0;
		
		switch (operator) {
		case "+" :
			answer = op1 + op2;
			break;
		case "-" :
			answer = op1 - op2;
			break;
		case "/" :
			answer = op1 / op2;
			break;
		case "*" :
			answer = op1 * op2;
			break;
	}
		System.out.println("Calculating " + op1 + "," + op2 + "," + operator +
				" Answer is " + answer);
		
		return answer + "";
	}
}
